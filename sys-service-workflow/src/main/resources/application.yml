server:
  port: 40500
  servlet:
    context-path: /workflow
spring:
  application:
    name: sys-service-workflow
  datasource:
    druid:
      url: jdbc:oracle:thin:@10.21.2.204:1521:orcl  #jdbc:mysql://bj-cdb-ek0svv64.sql.tencentcdb.com:63219/myactiviti?characterEncoding=utf-8
      username: jkptnmtest
      password: designer
      # driverClassName: oracle.jdbc.driver.OracleDriver  #com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
      driver-class-name: oracle.jdbc.driver.OracleDriver
  activiti:
    #自动更新数据库结构
    database-schema-update: true
    history-level: full
    db-history-used: true
    #自动检查、部署流程定义文件
    check-process-definitions: true
pagehelper:
  helper-dialect: oracle
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://127.0.0.1:60101/eureka/}
      #defaultZone: ${EUREKA_SERVER:http://127.0.0.1:60101/eureka/,http://eureka02:60102/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
logging:
  level:
    com.boco.sys.service.workflow.dao: trace
